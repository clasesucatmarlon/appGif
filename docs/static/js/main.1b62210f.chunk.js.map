{"version":3,"sources":["components/AddCategory.js","components/GifGridItems.js","helpers/GetGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCateg","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","GifGridItems","id","title","url","console","log","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","imag","GifExpertApp","categories","setCategories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EACJC,mBAAS,IADL,mBACjCC,EADiC,KACrBC,EADqB,KAiBxC,OACG,sBAAMC,SATY,SAACC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAU,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACjCN,EAAc,MAKjB,SACG,uBACGO,KAAK,OACLC,MAAOT,EACPU,SAlBiB,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,a,QCNhBG,EAAe,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAEvC,OADAC,QAAQC,IAAI,CAAEJ,KAAIC,QAAOC,QAEtB,sBAAKG,UAAU,uCAAf,UACG,qBAAKC,IAAKJ,EAAKK,IAAKN,IACpB,4BAAIA,Q,uBCLGO,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACdR,EADc,iDACkCS,UAAWF,GAD7C,+DAEDG,MAAMV,GAFL,cAEdW,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACJlB,GAAIkB,EAAIlB,GACRC,MAAOiB,EAAIjB,MACXC,IAAG,UAAEgB,EAAIC,cAAN,aAAE,EAAYC,iBAAiBlB,QATpB,kBAaZc,GAbY,4CAAH,sDCEVK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACbvB,mBAAS,CAChC6B,KAAM,GACNO,SAAS,IAH2B,mBAChCC,EADgC,KACzBC,EADyB,KAkBvC,OAXAC,qBAAU,WACPjB,EAAQC,GAAUiB,MAAK,SAAAC,GACpBC,YAAW,WACRJ,EAAS,CACNT,KAAMY,EACNL,SAAS,MAEZ,UAEN,CAACb,IAEGc,EDhB2BM,CAAapB,GAAjCU,EADwB,EAC9BJ,KAAcO,EADgB,EAChBA,QACtB,OACG,qCACKA,GAAW,mBAAGjB,UAAU,qDAAb,yCACb,qBAAKA,UAAU,QAAf,SACG,oBAAIA,UAAU,2CAAd,SAA0DI,MAG7D,qBAAKJ,UAAU,YAAf,SAEMc,EAAOF,KAAI,SAAAa,GAAI,OACZ,cAAC,EAAD,eAEOA,GADCA,EAAK9B,aEkBhB+B,EA/BM,WAAO,IAAD,EAEa7C,mBAAS,CAAC,SAFvB,mBAEhB8C,EAFgB,KAEJC,EAFI,KAWvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAahD,SAAUgD,IACvB,uBAKID,EAAWf,KAAI,SAACR,GAAD,OACX,cAAC,EAAD,CAEIA,SAAUA,GADLA,U,MCnB7ByB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1b62210f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCateg}) => {\n   const [inputValue, setinputValue] = useState('');\n\n   // Escribir dentro del la caja de texto.  Al llamar a esta función se actualiza de una vez el inputValue\n   const handleInputChange = (e) => {\n      setinputValue(e.target.value)\n   }\n\n   // Manejar el evento ENTER\n   const handleSubmit = (e) => {\n      e.preventDefault();  // Prevenir el comportamiento por defecto del formulario\n      if (inputValue.trim().length > 2) {\n         setCateg( cat => [inputValue, ...cat, ] );\n         setinputValue('');\n      }\n   }\n\n   return (\n      <form onSubmit={handleSubmit}>\n         <input\n            type='text'\n            value={inputValue}\n            onChange={handleInputChange}\n         />\n      </form>\n   )\n}\n\nAddCategory.propTypes = {\n   setCateg: PropTypes.func.isRequired\n}\n","import React from 'react'\n\nexport const GifGridItems = ({ id, title, url }) => {\n   console.log({ id, title, url })\n   return (\n      <div className='card animate__animated animate__flip'>\n         <img src={url} alt={title} />\n         <p>{title}</p>\n      </div>\n   )\n}\n","\n\n   export const getGifs = async ( category ) => {\n      const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=pOFtYHGzH718DYtBKguubBLqSqEdL6IS`;\n      const resp = await fetch(url);\n      const { data } = await resp.json();\n\n      const gifs = data.map(img => {\n         return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n         }\n      })\n\n      return (gifs);\n      \n   }","import React from 'react';\nimport { GifGridItems } from './GifGridItems';\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\n\nexport const GifGrid = ({ category }) => {\n   const { data: images, loading } = useFetchGifs(category);\n   return (\n      <>\n         { loading && <p className='animate__animated animate__flash animate__delay-3s'>Cargando información ...</p>}\n         <div className='title'>\n            <h3 className='animate__animated animate__fadeInDownBig'>{category}</h3>\n         </div>\n\n         <div className='card-grid'>\n            {\n               images.map(imag => (\n                  <GifGridItems\n                     key={imag.id}\n                     {...imag}\n                  />\n               ))\n            }\n         </div>\n      </>\n   )\n}\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/GetGifs';\n\nexport const useFetchGifs = (category) => {\n   const [state, setState] = useState({\n      data: [],\n      loading: true\n   });\n\n   // Ejecutar la petición Fetch solo una vez\n   useEffect(() => {\n      getGifs(category).then(imgs => {\n         setTimeout(() => {\n            setState({\n               data: imgs,\n               loading: false\n            });\n         }, 3000);\n      });\n   }, [category])\n\n   return state; // { data: [], loading: true}\n\n\n\n}","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['dogs'])\n\n    /*     //AGREGAR NUEVO ELEMENTO AL ARRAY\n        const handleAdd = () => {\n            setCategories([...categories, 'Hola'])\n        } */\n\n\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCateg={setCategories} />\n            <hr />\n\n            {/* <button onClick={handleAdd}>Agregar</button> */}\n\n            {\n                categories.map((category) => (\n                    <GifGrid\n                        key={category}\n                        category={category} />\n                ))\n            }\n\n        </>\n    )\n}\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}